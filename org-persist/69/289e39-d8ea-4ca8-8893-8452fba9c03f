(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #3=(headline (:raw-value #1="Daily entry: Monk Journal" :begin 3 :end 1865 :pre-blank 0 :contents-begin 31 :contents-end 1865 :robust-begin 108 :robust-end 1863 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3 :YEAR "2023" :DATE "[[Aug 2nd, 2023]]" :TAGS "#daily-journal" :title #1# :mode nil :granularity element :cached t :parent #8=(org-data (:begin 1 :contents-begin 1 :contents-end 1865 :end 1865 :robust-begin 3 :robust-end 1863 :post-blank 0 :post-affiliated 1 :path "/System/Volumes/Data/Users/asdingfs/.emacs.d/.personal.d/org/notes/brain/logseq-brain/logseq/bak/journals/2023_08_02/2023-09-10T15_28_40.603Z.Desktop.org" :mode org-data :CATEGORY "2023-09-10T15_28_40.603Z.Desktop" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [[nil nil #5=(headline (:raw-value #2="Prepare - To-Do (prio 3, max: 8): {{renderer :todomaster}}" :begin 616 :end 1066 :pre-blank 0 :contents-begin 678 :contents-end 1066 :robust-begin 680 :robust-end 1064 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 616 :title #2# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #10=(headline (:raw-value #4="((64c504de-1543-4854-b21b-f561943e1d43)) >[[#agenda-pomo://?t=f-1690949631436-1500][üçÖ 25min]]" :begin 764 :end 916 :pre-blank 0 :contents-begin 867 :contents-end 916 :robust-begin 869 :robust-end 914 :level 3 :priority nil :tags nil :todo-keyword "TODO" :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 764 :title #4# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] #11=(headline (:raw-value #6="Understand basic [[file:../pages/TypeScript.org][TypeScript]] usage in React" :begin 678 :end 764 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 3 :priority nil :tags nil :todo-keyword "TODO" :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 678 :title #6# :mode section :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] #12=(headline (:raw-value #7="*FOCUS*, *PRESENCE*, *LOVE*" :begin 109 :end 140 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 109 :title #7# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[nil nil #8# 0] [nil nil #3# 0] (section (:begin 1 :end 3 :contents-begin 1 :contents-end 3 :robust-begin nil :robust-end nil :post-blank 0 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #8# :org-element--cache-sync-key nil)) 0] [[[nil nil #9=(property-drawer (:begin 31 :end 109 :contents-begin 44 :contents-end 103 :post-blank 0 :post-affiliated 31 :mode planning :granularity element :cached t :parent #13=(section (:begin 31 :end 109 :contents-begin 31 :contents-end 109 :robust-begin 31 :robust-end 107 :post-blank 0 :post-affiliated 31 :mode section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (node-property (:key "date" :value "[[Aug 2nd, 2023]]" :begin 56 :end 81 :post-blank 0 :post-affiliated 56 :mode node-property :granularity element :cached t :parent #9# :org-element--cache-sync-key nil)) 0] (node-property (:key "year" :value "2023" :begin 44 :end 56 :post-blank 0 :post-affiliated 44 :mode node-property :granularity element :cached t :parent #9# :org-element--cache-sync-key nil)) 0] [[nil nil #5# 0] [nil nil #10# 0] #11# 0] #12# 0] #13# 1] nil nil 0] org-element--cache-compare)))